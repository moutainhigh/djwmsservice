<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd

		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

    <!-- 启动SpringMVC的注解功能 -->
    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.djcps.wms.commons.aop.inneruser.aspect.InnerUserResolver"/>
            <bean class="com.djcps.wms.commons.aop.inneruser.aspect.InnerUserTokenResolver"/>
            <bean class="com.djcps.wms.commons.aop.inneruser.aspect.OperatorResolver" />
        </mvc:argument-resolvers>
    </mvc:annotation-driven>
    <!-- 自动扫描该包 -->
    <context:component-scan base-package="com.djcps"/>
    <context:component-scan base-package="com.djcps.health" />
    <!-- 激活自动代理功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- rpc -->
    <bean class="rpc.plugin.spring.HTTPBeanProcessor">
        <property name="prefix" value="com.djcps.wms"/>
    </bean>

    <!-- HTTP请求配置-->
    <bean class="httprequest.plugin.spring.HTTPBeanProcessor">
	   <property name="prefix">
		  <array value-type="java.lang.String">
		      <value>com</value>
		  </array>
		</property>
		<property name="httpConversion">
		      <bean class="com.conversion.HttpReturnConversion" />
		</property>
		<property name="locations">
		  <list>
			  <value>classpath*:*/*/httpurl.properties</value>
		  </list>
		</property>
	</bean>

    <!-- JSON Converter 保证 JSON能正常转换 -->
    <bean id="mappingJackson2HttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    <!--设置response返回参数为UTF-8 保证正常输出字符串-->
    <bean id="stringHttpMessageConverter"
          class="org.springframework.http.converter.StringHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>text/plain;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!--图片上传限制-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxUploadSize" value="10737418240"/>
        <property name="maxInMemorySize" value="1048576"/>
    </bean>
	
	<!--  当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法   -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
			<mvc:mapping path="/**"/>
			<bean class="com.djcps.wms.commons.interceptor.WmsInterceptor"></bean>
		</mvc:interceptor>
        <mvc:interceptor>
            <!-- 权限拦截器 对所有的Controller进行权限控制-->
            <mvc:mapping path="/**"/>
            <bean class="com.djcps.wms.commons.interceptor.WmsPermissionInterceptor" />
        </mvc:interceptor>
	</mvc:interceptors>
</beans>