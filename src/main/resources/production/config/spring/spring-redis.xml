<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
    <!-- Activates annotation-based bean configuration -->

    <!--<context:annotation-dev.config/>-->
    <!-- Scans for application @Components to deploy -->

    <!-- 公共Redis配置文件读取 -->
    <context:property-placeholder location="classpath:config/properties/redis.properties" />

    <bean class="org.apache.commons.pool2.impl.GenericObjectPoolConfig"
          id="jedisPoolConfig">
        <!--可用连接实例的最大数目，默认值为8 -->
        <property name="maxTotal" value="200" />
        <!--等待可用连接的最大时间 毫秒 -->
        <property name="maxWaitMillis" value="60000" />
        <!--在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->
        <property name="testOnBorrow" value="true" />
        <!--Idle时进行连接扫描 -->
        <property name="testWhileIdle" value="true" />
        <!--控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。 -->
        <property name="maxIdle" value="8" />
        <!--表示idle object evitor两次扫描之间要sleep的毫秒数 -->
        <property name="timeBetweenEvictionRunsMillis" value="1000" />
        <!--表示idle object evitor每次扫描的最多的对象数 -->
        <property name="numTestsPerEvictionRun" value="10" />
        <!--表示一个对象至少停留在idle状态的最短时间 毫秒数 -->
        <property name="minEvictableIdleTimeMillis" value="5000" />
    </bean>
	
	<!-- 	集群redis -->
	<bean class="com.djcps.wms.commons.base.RedisClientCluster" id="redisClientCluster">
		<property name="jedisCluster" ref="jedisCluster"/>
	</bean>
	
	<!-- 	单机redis -->
	<bean class="com.djcps.wms.commons.base.RedisClientSingle" id="redisClientSingle">
		<property name="jedisPool" ref="userJedisPool"/>
	</bean>
	
    <bean class="redis.clients.jedis.JedisCluster" id="jedisCluster">
        <constructor-arg>
            <set>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${cluster.d1.host}" />
                    <constructor-arg name="port" value="${cluster.d1.port}" />
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${cluster.d2.host}" />
                    <constructor-arg name="port" value="${cluster.d2.port}" />
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${cluster.d3.host}" />
                    <constructor-arg name="port" value="${cluster.d3.port}" />
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${cluster.d4.host}" />
                    <constructor-arg name="port" value="${cluster.d4.port}" />
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${cluster.d5.host}" />
                    <constructor-arg name="port" value="${cluster.d5.port}" />
                </bean>
                <bean class="redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${cluster.d6.host}" />
                    <constructor-arg name="port" value="${cluster.d6.port}" />
                </bean>
            </set>
        </constructor-arg>
        <constructor-arg name="connectionTimeout" value="2000"/>
        <constructor-arg name="soTimeout" value="2000"/>
        <constructor-arg name="maxAttempts" value="5"/>
        <constructor-arg name="password" value="${cluster.password}"/>
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
    </bean>
    
	<!--Redis 内部统一登录用户信息、内部URL权限-->
    <bean id="userJedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.user.host}"/>
        <constructor-arg name="port" value="${redis.user.port}" type="int"/>
        <constructor-arg name="timeout" value="${redis.user.timeout}" type="int"/>
        <constructor-arg name="password" value="${redis.user.password}"/>
        <constructor-arg name="database" value="${redis.userJedisPool.database}"/>
    </bean>

</beans>